import { Task } from '@prisma/client';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';

import { trpc } from '@utils';

import { CreateTaskModal } from '../components/createTaskModal';
import { LoginButton } from '../components/loginButton';
import { TaskCard } from '../components/taskCard';

const Home: NextPage = () => {
  const { data: session } = trpc.auth.getSession.useQuery();
  const { data: taskData, isLoading } = trpc.task.all.useQuery(undefined, {
    onSuccess(taskItems) {
      setTaskItems(taskItems);
    },
  });
  const [modalOpen, setModalOpen] = useState<boolean>(false);
  const [taskItems, setTaskItems] = useState<Task[]>([]);

  return (
    <>
      <Head>
        <title>T3 Task Board</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-white p-8 w-full h-screen">
        <header>
          <div className="flex flex-col items-end">
            <LoginButton />
          </div>
        </header>
        {session?.user && (
          <main>
            <section className="max-auto">
              <section className="flex">
                <h1 className="text-3xl font-bold mr-2">Create task </h1>
                <button
                  type="button"
                  className="w-10 h-10 rounded-full  pt-0 pb-0.5 bg-black text-white font-semibold text-xl hover:scale-[103%]  "
                  onClick={() => setModalOpen(true)}
                >
                  +
                </button>
              </section>
              <section>
                {!taskData || isLoading ? (
                  <p>Loading..</p>
                ) : (
                  taskItems && (
                    <div className="flex w-full mt-6">
                      <div className="flex-none w-1/3">
                        <h2 className="text-xl font-bold mr-2 mb-5">To do</h2>

                        <div className="">
                          {taskItems?.map((p) => {
                            return <TaskCard key={p.id} task={p} />;
                          })}
                        </div>
                      </div>
                      <div className="flex-none w-1/3">
                        <h2 className="text-xl font-bold mr-2 ">In progress</h2>
                      </div>{' '}
                      <div className="flex-none w-1/3">
                        <h2 className="text-xl font-bold mr-2 ">Done</h2>
                      </div>
                    </div>
                  )
                )}
              </section>
              <section className="mt-80"></section>
            </section>
          </main>
        )}
        {modalOpen && (
          <CreateTaskModal
            setModalOpen={setModalOpen}
            setTaskItems={setTaskItems}
          />
        )}
      </div>
    </>
  );
};

export default Home;
